<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于信息收集的心得</title>
    <link href="/2025/01/25/%E5%85%B3%E4%BA%8E%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%9A%84%E5%BF%83%E5%BE%97/"/>
    <url>/2025/01/25/%E5%85%B3%E4%BA%8E%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%9A%84%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<h1 id="信息收集的心得"><a href="#信息收集的心得" class="headerlink" title="信息收集的心得"></a>信息收集的心得</h1><p>信息收集的大部分题目比较简单，不需要太高的技术水平，只需要有仔细、大胆、脑洞即可。</p><h1 id="几个方向的思路"><a href="#几个方向的思路" class="headerlink" title="几个方向的思路"></a>几个方向的思路</h1><h3 id="一、查看源代码"><a href="#一、查看源代码" class="headerlink" title="一、查看源代码"></a>一、查看源代码</h3><p>在简单的题目中会有这些会有这样的解法，有时网站会禁止使用某个方式，需要掌握多种查看方法。</p><p>查看源代码的方式有：</p><ol><li>ctrl+u</li><li>右键</li><li>使用Burp suite抓包</li></ol><h3 id="二、抓包看响应"><a href="#二、抓包看响应" class="headerlink" title="二、抓包看响应"></a>二、抓包看响应</h3><p>有些信息会藏在<strong>响应Cookies</strong>里，或者直接就能看到。</p><h3 id="三、disearch工具扫描"><a href="#三、disearch工具扫描" class="headerlink" title="三、disearch工具扫描"></a>三、disearch工具扫描</h3><p>可以通过<strong>disearch</strong>工具对网站进行扫描，Dirsearch是一个基于Python的命令行工具，主要用于<strong>暴力扫描Web服务器的目录和文件</strong>。这个工具可以帮助渗透测试人员发现网站的隐藏目录，这些目录可能包含敏感信息或潜在的攻击媒介。Dirsearch通过自定义字典进行扫描，支持多线程，使得扫描过程快速高效。</p><p>在扫描过后找到敏感文件，比如：robots.txt，index.phps，.git等。</p><h3 id="四、在网页中寻找"><a href="#四、在网页中寻找" class="headerlink" title="四、在网页中寻找"></a>四、在网页中寻找</h3><p>在信息收集中网页中可能潜藏信息，比如ctfshow中web13中<img src="D:\blog\Github\source_posts\关于信息收集的心得\1737794450986.png" alt="1737794450986"></p><p>敏感信息，解题关键就在这儿。<strong>（耐心去找，才有可能找到）！！！</strong></p><h3 id="五、目录"><a href="#五、目录" class="headerlink" title="五、目录"></a>五、目录</h3><p>通过在网站的源目录里找到flag</p><h3 id="六、PHP探针"><a href="#六、PHP探针" class="headerlink" title="六、PHP探针"></a>六、PHP探针</h3><p>PHP探针php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡 流量、系统负载、服务器时间等信息。 </p><p>PHP探针是测试用的，但是探针漏洞类型的题目中可以使用。</p><p>通过探针可以获取许多信息。</p><p>探针通常为 tz.php。</p><h3 id="七、游戏"><a href="#七、游戏" class="headerlink" title="七、游戏"></a>七、游戏</h3><p>在是小游戏的信息收集中源代码里往往藏着游戏胜利的条件，只需要在源代码里寻找即可。</p><h3 id="八、asp-access构建的数据库"><a href="#八、asp-access构建的数据库" class="headerlink" title="八、asp+access构建的数据库"></a>八、asp+access构建的数据库</h3><p>.mdb文件是早期Access数据库的文件（2003版）  还有.accdb（2007版）。</p><p>MDB 文件包含数据库查询、表等，可用于链接和存储来自其他文件（如 XML 和 HTML）以及应用程序（如 <a href="https://cn.windows.day/?cat=excel">Excel</a> 和 SharePoint）的数据。 LDB 文件有时与 Access 数据库文件位于同一文件夹中；它是一个临时存储在共享数据库中的 Access <em>锁定</em>文件。</p><p>可以通过访问.mdb文件</p><p>也可以通过多次dirsearch扫描，找到文件。</p><p>如遇到其他方法还会添加。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>nmap的使用方法</title>
    <link href="/2025/01/21/nmap%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2025/01/21/nmap%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h1><h2 id="一、功能"><a href="#一、功能" class="headerlink" title="一、功能:"></a>一、功能:</h2><ol><li>主机发现</li><li>端口扫描</li><li>版本侦测</li><li>OS侦测</li><li>漏洞扫描</li></ol><h2 id="二、功能解析"><a href="#二、功能解析" class="headerlink" title="二、功能解析"></a>二、功能解析</h2><h3 id="Ⅰ、主机发现"><a href="#Ⅰ、主机发现" class="headerlink" title="Ⅰ、主机发现"></a>Ⅰ、主机发现</h3><p>主机发现的命令原理和ping差不多，但不仅仅局限于ping。如果收到回复，则证明主机是打开的，nmap可以使用多种方法来证明主机是否启动，可以防止单一方法被防护墙隔断，如windows系统的防火墙。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">nmap -sP  ip#单个主机<br>nmap -sP ip,ip#多个主机使用逗号隔开<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">解析：<br>Host <span class="hljs-keyword">is</span> <span class="hljs-keyword">up</span>表示主机存活<br>MAC Address为物理地址<br></code></pre></td></tr></table></figure><p><strong>一个范围的主机</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">nmap -sP ip<br></code></pre></td></tr></table></figure><p><strong>服务版本探测</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">nmap -sV ip<br></code></pre></td></tr></table></figure><p><strong>扫描目标主机操作系统版本</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">nmap -O ip<br></code></pre></td></tr></table></figure><p><strong>全面扫描</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">nmap -A ip<br></code></pre></td></tr></table></figure><h3 id="Ⅱ、端口扫描"><a href="#Ⅱ、端口扫描" class="headerlink" title="Ⅱ、端口扫描"></a>Ⅱ、端口扫描</h3><p>端口扫描是Nmap的关键功能，用于确定目标主机的TCP&#x2F;UDP端口的开放情况。</p><p>状态：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">open:端口是开放的。</span><br><span class="hljs-section">closed:端口是关闭的。 </span><br><span class="hljs-section">filtered:端口被防火墙或IDS/IPS屏蔽，无法确定其状态。</span><br><span class="hljs-section">unfiltered:端口没有被屏被，但是否开放需要进一步确定。 </span><br><span class="hljs-section">open|filtered:端口是开放的或被屏蔽。 </span><br><span class="hljs-section">closed|filtered:端口是关闭的或被屏敲。</span><br></code></pre></td></tr></table></figure><h3 id="Ⅲ、版本侦测"><a href="#Ⅲ、版本侦测" class="headerlink" title="Ⅲ、版本侦测"></a>Ⅲ、版本侦测</h3><p>版本侦测主要分为以下几个步骤： </p><p>1,首先检查open与open|filtered状态的端口是否在排除端口列表内。如果在排除列表，将该端口别除，</p><p>2.如果是TcP端口，尝试建立TCP连接。尝试等待片刻（通常6秒或更多，具体时间可以查询文件nmap-services-probes中Probe TCP NULL q|对应的totalwaitms)。通常在等待时间内，会接收到目标机发送的“WelcomeBanner”信息。nmap将接收到的Banner与nmap-services- probes中NULL probe中的签名进行对比。查找对应应用程序的名字与版本信息。 </p><p>3.如果通过“Welcome Banner”无法确定应用程序版本，那么nmap再尝试发送其他的探测包（即从nmap-services-probes中挑选合适的probe),将probe得到回复包与数据库中的签名进行对比。如果反复探测都无法得出具体应用，那么打印出应用返回报文，让用户自行进一步判定。 </p><p>4,如果是UDP端口，那么直接使用nmap-services-probes中探测包进行探测匹配。根据结果对比分析出UDP应用服务类型。 </p><p>5,如果探测到应用程序是sSL,那么调用openSSL进一步的侦查运行在SSL之上的具体的应用类型。 </p><p>6.如果探测到应用程序是SunRPC,那么调用orute-force RPC grinder进一步探测具体服务。</p><p>基本用法</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">--sV:指定让：Nmap进行版本侦测<br>--<span class="hljs-keyword">version</span>-ntensity<span class="hljs-symbol">&lt;level&gt;</span>:指定版本侦测强度(<span class="hljs-number">0</span>-<span class="hljs-number">9</span>)，默认为<span class="hljs-number">7</span>。数值越高，探测出的服务越准确，但是运行时间会比较长。<br>--<span class="hljs-keyword">version</span>-light:指定使用径录侦测方式(intensity <span class="hljs-number">2</span>)<br>--<span class="hljs-keyword">version</span>-<span class="hljs-keyword">all</span>:尝试使用所有的probes.进行侦测(intensity <span class="hljs-number">9</span>)<br>--<span class="hljs-keyword">version</span>-trace:显示出详细的版本侦测过程信息。<br></code></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd">nmap -sv ip<br>#-sV（版本探测）  <br>#该参数可打开版本探测。也可以用-A同时打开操作系统探测和版本探测。<br></code></pre></td></tr></table></figure><h3 id="Ⅳ、OS侦测"><a href="#Ⅳ、OS侦测" class="headerlink" title="Ⅳ、OS侦测"></a>Ⅳ、OS侦测</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">nmap</span> <span class="hljs-built_in">--O</span> <span class="hljs-string">ip</span>                          <span class="hljs-comment">#进行OS的侦测</span><br></code></pre></td></tr></table></figure><h3 id="Ⅴ、漏洞扫描"><a href="#Ⅴ、漏洞扫描" class="headerlink" title="Ⅴ、漏洞扫描"></a>Ⅴ、漏洞扫描</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">nmap<span class="hljs-built_in"> ip </span><span class="hljs-attribute">--script</span>=auth,vuln   #一些常见的漏洞，专业可以使用AWVS<br></code></pre></td></tr></table></figure><h2 id="三、所有功能"><a href="#三、所有功能" class="headerlink" title="三、所有功能"></a>三、所有功能</h2><p>-sT TCP connect()扫描，这种方式会在目标主机的日志中记录大批连接请求和错误信息。<br>-sS 半开扫描，很少有系统能把它记入系统日志。不过，需要Root权限。<br>-sF -sN 秘密FIN数据包扫描、Xmas Tree、Null扫描模式<br>-sP ping扫描，Nmap在扫描端口时，默认都会使用ping扫描，只有主机存活，Nmap才会继续扫描。<br>-sU UDP扫描，但UDP扫描是不可靠的<br>-sA 这项高级的扫描方法通常用来穿过防火墙的规则集<br>-sV 探测端口服务版本<br>-Pn 扫描之前不需要用ping命令，有些防火墙禁止ping命令。可以使用此选项进行扫描<br>-v 显示扫描过程，推荐使用<br>-h 帮助选项，是最清楚的帮助文档<br>-p 指定端口，如“1-65535、1433、135、22、80”等<br>-O 启用远程操作系统检测，存在误报<br>-A 全面系统检测、启用脚本检测、扫描等<br>-oN&#x2F;-oX&#x2F;-oG 将报告写入文件，分别是正常、XML、grepable 三种格式<br>-T4 针对TCP端口禁止动态扫描延迟超过10ms<br>-iL 读取主机列表，例如，“-iL C:\ip.txt”</p><p>nmap –iflist : 查看本地主机的接口信息和路由信息<br>-A ：选项用于使用进攻性方式扫描<br>-T4： 指定扫描过程使用的时序，总有6个级别（0-5），级别越高，扫描速度越快，但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况较好的情况下推荐使用T4<br>-oX test.xml： 将扫描结果生成 test.xml 文件，如果中断，则结果打不开<br>-oA test.xml: 将扫描结果生成 test.xml 文件，中断后，结果也可保存<br>-oG test.txt: 将扫描结果生成 test.txt 文件<br>-sn : 只进行主机发现，不进行端口扫描<br>-O : 指定Nmap进行系统版本扫描<br>-sV: 指定让Nmap进行服务版本扫描<br>-p : 扫描指定的端口<br>-sS&#x2F;sT&#x2F;sA&#x2F;sW&#x2F;sM:指定使用 TCP SYN&#x2F;Connect()&#x2F;ACK&#x2F;Window&#x2F;Maimon scans的方式来对目标主机进行扫描<br>-sU: 指定使用UDP扫描方式确定目标主机的UDP端口状况<br>-script</p><p>-sL: List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现<br>-sY&#x2F;sZ: 使用SCTP INIT&#x2F;COOKIE-ECHO来扫描SCTP协议端口的开放的情况<br>-sO: 使用IP protocol 扫描确定目标机支持的协议类型<br>-PO : 使用IP协议包探测对方主机是否开启<br>-PE&#x2F;PP&#x2F;PM : 使用ICMP echo、 ICMP timestamp、ICMP netmask 请求包发现主机<br>-PS&#x2F;PA&#x2F;PU&#x2F;PY : 使用TCP SYN&#x2F;TCP ACK或SCTP INIT&#x2F;ECHO方式进行发现</p><p>-sN&#x2F;sF&#x2F;sX: 指定使用TCP Null, FIN, and Xmas scans秘密扫描方式来协助探测对方的TCP端口状态<br>-e eth0：指定使用eth0网卡进行探测<br>-f : –mtu : 指定使用分片、指定数据包的 MTU.<br>-b : 使用FTP bounce scan扫描方式<br>-g： 指定发送的端口号<br>-r: 不进行端口随机打乱的操作（如无该参数，nmap会将要扫描的端口以随机顺序方式扫描，以让nmap的扫描不易被对方防火墙测到）<br>-v 表示显示冗余信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态<br>-n : 表示不进行DNS解析；<br>-D &lt;decoy1,decoy2[,ME],…&gt;: 用一组 IP 地址掩盖真实地址，其中 ME 填入自己的 IP 地址<br>-R ：表示总是进行DNS解析。<br>-F : 快速模式，仅扫描TOP 100的端口<br>-S <IP_Address>: 伪装成其他 IP 地址<br>–ttl : 设置 time-to-live 时间<br>–badsum: 使用错误的 checksum 来发送数据包（正常情况下，该类数据包被抛弃，如果收到回复，说明回复来自防火墙或IDS&#x2F;IPS）<br>–dns-servers : 指定DNS服务器<br>–system-dns : 指定使用系统的DNS服务器<br>–traceroute : 追踪每个路由节点<br>–scanflags : 定制TCP包的flags<br>–top-ports :扫描开放概率最高的number个端口<br>–port-ratio : 扫描指定频率以上的端口。与上述–top-ports类似，这里以概率作为参数<br>–version-trace: 显示出详细的版本侦测过程信息<br>–osscan-limit: 限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有一个open和closed的端口）<br>–osscan-guess: 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统<br>–data-length : 填充随机数据让数据包长度达到 Num<br>–ip-options : 使用指定的 IP 选项来发送数据包<br>–spoof-mac &lt;mac address&#x2F;prefix&#x2F;vendor name&gt; : 伪装 MAC 地址<br>–version-intensity : 指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。<br>–version-light: 指定使用轻量侦测方式 (intensity 2)<br>–version-all: 尝试使用所有的probes进行侦测 (intensity 9)<br>–version-trace: 显示出详细的版本侦测过程信息</p><h1 id="Zenmap工具使用实例"><a href="#Zenmap工具使用实例" class="headerlink" title="Zenmap工具使用实例"></a>Zenmap工具使用实例</h1><p><strong>扫描单个主机</strong></p><p>Nmap输出信息：</p><p><strong>端口信息：</strong><br>可看到开放的端口及服务。</p><p><strong>主机明细：</strong><br>可看到操作系统信息。</p><p><strong>拓扑图：</strong><br>可看到访问的路径。</p><p><strong>主机明细：</strong><br>可看到操作系统信息、ip信息等。</p><p><strong>编辑自定义配置</strong><br>点击【配置】-【新的配置或命令】，在弹出框的上面一栏写自己需要的命令，下面【配置文件名】写入名字，描述栏可写相关的信息，点击保存即可。</p><h4 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h4><ul><li>Intense scan<br>(nmap -T4 -A -v)<br>一般来说，Intense scan可以满足一般扫描<br>-T4 加快执行速度<br>-A 操作系统及版本探测<br>-v 显示详细的输出</li><li>Intense scan plus UDP<br>(nmap -sS -sU -T4 -A -v)<br>即UDP扫描<br>-sS TCP SYN 扫描<br>-sU UDP 扫描</li><li>Intense scan,all TCP ports<br>(nmap -p 1-65536 -T4 -A -v)<br>扫描所有TCP端口，范围在1-65535，试图扫描所有端口的开放情况，速度比较慢。<br>-p 指定端口扫描范围</li><li>Intense scan,no ping<br>(nmap -T4 -A -v -Pn)<br>非ping扫描<br>-Pn 非ping扫描</li><li>Ping scan<br>(nmap -sn)<br>Ping 扫描<br>优点：速度快。<br>缺点：容易被防火墙屏蔽，导致无扫描结果<br>-sn ping扫描</li><li>Quick scan<br>(nmap -T4 -F)<br>快速的扫描<br>-F 快速模式。</li><li>Quick scan plus<br>(nmap -sV -T4 -O -F –version-light)<br>快速扫描加强模式<br>-sV 探测端口及版本服务信息。<br>-O 开启OS检测<br>–version-light 设定侦测等级为2。</li><li>Quick traceroute<br>(nmap -sn –traceroute)<br>路由跟踪<br>-sn Ping扫描，关闭端口扫描<br>-traceroute 显示本机到目标的路由跃点。</li><li>Regular scan<br>规则扫描</li><li>Slow comprehensive scan<br>(nmap -sS -sU -T4 -A -v -PE -PP -PS80,443,-PA3389,PU40125 -PY -g 53 –script all)<br>慢速全面扫描。</li></ul><h1 id="保存扫描结果"><a href="#保存扫描结果" class="headerlink" title="保存扫描结果"></a>保存扫描结果</h1><p>-oX test.xml： 将扫描结果生成 test.xml 文件，如果中断，则结果打不开<br>-oA test.xml: 将扫描结果生成 test.xml 文件，中断后，结果也可保存<br>-oG test.txt: 将扫描结果生成 test.txt 文件</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
